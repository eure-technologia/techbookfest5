
= おわりに

本書をお読みいただき、ありがとうございました。

Go言語はシンプルであるが故に、小難しい設計を考えることは大規模アプリケーションとならなければ必要でないと思いますが、どの規模であっても、その「シンプルさ」を忘れて実装することは、Goの思想に背くことになり、Go言語が本来開発された背景を忘れていることにつながります。

日本でも、盛り上がりを見せているGo言語ですが、他の言語とは違う、「シンプルさ」という特徴を踏まえた「Go言語らしさ」というところをより広くこれからも伝えていきたいと思います。

いつもはGoのカンファレンスや、ブログの記事でGoのことを話していますが、今回、このような機会を作ってくださった Takahiro Futagawa <@futabooo> さんに感謝と、表紙を担当している Karin Iwazaki <@pekoro> さん、そして、エウレカの皆さんに感謝の意をここで伝えます。

また、本書を書く前週に、右手中指の先端１ミリをスライサーで切断してしまい、追い込みのときに全速力で走ることが出来ないツラさをサポートしてくれた、病院の先生にも感謝の言葉を贈りたいと思います。

== Goのメンタリング

時々、「Goを自社に導入したいので導入したお話を聞きたい」などのお問い合わせが来ます。Goやマネジメントに関して、技術支援をしていますので、何かありましたら、Twitter@kaneshin0120 (https://twitter.com/kaneshin0120) までご連絡いただければと思います。
